// <auto-generated />
using System;
using GamesLoan.Infrastructure.DBConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GamesLoan.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210418235135_Correction-Column-User")]
    partial class CorrectionColumnUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GamesLoan.Domain.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DevolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FriendId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.HasIndex("GameId");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.Friend", b =>
                {
                    b.HasBaseType("GamesLoan.Domain.Entities.User");

                    b.HasDiscriminator().HasValue("Friend");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.Game", b =>
                {
                    b.HasOne("GamesLoan.Domain.Entities.User", null)
                        .WithMany("Games")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.Loan", b =>
                {
                    b.HasOne("GamesLoan.Domain.Entities.Friend", "Friend")
                        .WithMany("Loans")
                        .HasForeignKey("FriendId");

                    b.HasOne("GamesLoan.Domain.Entities.Game", "Game")
                        .WithMany("Loans")
                        .HasForeignKey("GameId");

                    b.Navigation("Friend");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.User", b =>
                {
                    b.HasOne("GamesLoan.Domain.Entities.UserType", "Type")
                        .WithMany("Users")
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.Game", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.User", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.UserType", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GamesLoan.Domain.Entities.Friend", b =>
                {
                    b.Navigation("Loans");
                });
#pragma warning restore 612, 618
        }
    }
}
